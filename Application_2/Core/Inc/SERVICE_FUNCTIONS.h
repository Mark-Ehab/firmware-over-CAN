/****************************************************************/
/* 					Author   	 : Mark Ehab                    */
/* 					Date     	 : Jan 17, 2022               	*/
/*              	Description	 : Service Functions Interface  */
/* 	        	    Version      : V1.0                         */
/****************************************************************/

/*---------------------------------------------------------------------------------------------------------------------------*/
/*                                                                                                         					 */
/*		  _____ ______ _______      _______ _____ ______   ______ _    _ _   _  _____ _______ _____ ____  _   _  _____       */
/*		 / ____|  ____|  __ \ \    / /_   _/ ____|  ____| |  ____| |  | | \ | |/ ____|__   __|_   _/ __ \| \ | |/ ____|      */
/*		| (___ | |__  | |__) \ \  / /  | || |    | |__    | |__  | |  | |  \| | |       | |    | || |  | |  \| | (___        */
/*		 \___ \|  __| |  _  / \ \/ /   | || |    |  __|   |  __| | |  | | . ` | |       | |    | || |  | | . ` |\___ \       */
/*		 ____) | |____| | \ \  \  /   _| || |____| |____  | |    | |__| | |\  | |____   | |   _| || |__| | |\  |____) |      */
/*		|_____/|______|_|  \_\  \/   |_____\_____|______| |_|     \____/|_| \_|\_____|  |_|  |_____\____/|_| \_|_____/       */
/*				                                                                                                   			 */
/*						                                                                                   					 */
/*---------------------------------------------------------------------------------------------------------------------------*/

#ifndef LIB_SERVICE_FUNCTIONS_H
#define LIB_SERVICE_FUNCTIONS_H

/*-----------------------------------------------------------------------------------*/
/*                                                                                   */
/*                           	 FUNCTIONS PROTOTYPES		                   	     */
/*                                                                                   */
/*-----------------------------------------------------------------------------------*/

/*--------------------------------------------------------------------------------*/
/* @Function Name 	: CeilDev										        	  */
/*--------------------------------------------------------------------------------*/
/* @Param(in) 		: sint32_t Copy_InputMin  									  */
/* 					  sint32_t Copy_InputMax		      						  */
/*					  sint32_t Copy_OutputMin                                     */
/*					  sint32_t Copy_OutputMax                                     */
/*					  sint32_t Copy_InputVal                                      */
/*--------------------------------------------------------------------------------*/
/* @Param(inout)	: None														  */
/*--------------------------------------------------------------------------------*/
/* @Param(out)		: None														  */
/*--------------------------------------------------------------------------------*/
/* @Return          : sint32_t    	        	      		        			  */
/*--------------------------------------------------------------------------------*/
/* @Description     : This function is used to map a value in some input range to */
/*					  its equivalent value in output range				    	  */
/*--------------------------------------------------------------------------------*/
sint32_t SERV_Map(sint32_t Copy_InputMin  , sint32_t Copy_InputMax,
			      sint32_t Copy_OutputMin , sint32_t Copy_OutputMax,
			      sint32_t Copy_InputVal );
/*--------------------------------------------------------------------------------*/
/* @Function Name 	: Mod   										        	  */
/*--------------------------------------------------------------------------------*/
/* @Param(in) 		: float32_t Copy_Num1  										  */
/* 					  float32_t Copy_Num2		      						  	  */
/*--------------------------------------------------------------------------------*/
/* @Param(inout)	: None														  */
/*--------------------------------------------------------------------------------*/
/* @Param(out)		: None														  */
/*--------------------------------------------------------------------------------*/
/* @Return          : float32_t  	        	      		        			  */
/*--------------------------------------------------------------------------------*/
/* @Description     : Function to get modulus of two numbers					  */
/*--------------------------------------------------------------------------------*/
float32_t SERV_Mod(float32_t Copy_Num1 , float32_t Copy_Num2);
/*--------------------------------------------------------------------------------*/
/* @Function Name 	: CeilDev										        	  */
/*--------------------------------------------------------------------------------*/
/* @Param(in) 		: float32_t Copy_Num1  										  */
/* 					  float32_t Copy_Num2		      						  	  */
/*--------------------------------------------------------------------------------*/
/* @Param(inout)	: None														  */
/*--------------------------------------------------------------------------------*/
/* @Param(out)		: None														  */
/*--------------------------------------------------------------------------------*/
/* @Return          : uint32_t  	        	      		        			  */
/*--------------------------------------------------------------------------------*/
/* @Description     : Function to get ceil of the result of two dividend numbers  */
/*--------------------------------------------------------------------------------*/
uint32_t SERV_CeilDev(float32_t Copy_Num1 , float32_t Copy_Num2);
/*--------------------------------------------------------------------------------*/
/* @Function Name 	: Pow											        	  */
/*--------------------------------------------------------------------------------*/
/* @Param(in) 		: uint32_t Copy_Base 										  */
/* 					  uint32_t Copy_Power		      						  	  */
/*--------------------------------------------------------------------------------*/
/* @Param(inout)	: None														  */
/*--------------------------------------------------------------------------------*/
/* @Param(out)		: None														  */
/*--------------------------------------------------------------------------------*/
/* @Return          : uint32_t  	        	      		        			  */
/*--------------------------------------------------------------------------------*/
/* @Description     : Function to get the power of a number		       		      */
/*--------------------------------------------------------------------------------*/
uint32_t SERV_Pow(uint32_t Copy_Base , uint32_t Copy_Power);

/*--------------------------------------------------------------------------------*/
/* @Function Name 	: Pow											        	  */
/*--------------------------------------------------------------------------------*/
/* @Param(in) 		: uint32_t Copy_Time										  */
/*--------------------------------------------------------------------------------*/
/* @Param(inout)	: None														  */
/*--------------------------------------------------------------------------------*/
/* @Param(out)		: None														  */
/*--------------------------------------------------------------------------------*/
/* @Return          : uint32_t  	        	      		        			  */
/*--------------------------------------------------------------------------------*/
/* @Description     : Function to block the processor for specified delay in ms	  */
/*--------------------------------------------------------------------------------*/
uint32_t SERV_Delay_ms(uint32_t Copy_Time);

#endif /* LIB_SERVICE_FUNCTIONS_H */
